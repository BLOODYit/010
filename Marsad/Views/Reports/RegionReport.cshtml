@{
    Layout = "~/Views/Shared/_Plain.cshtml";
}
@Styles.Render("~/Content/mapReportStyle")
<style>
    body {
        background-color: white;
        color: black;
    }

    table {
        margin: auto;
    }

    .table-group .control-label {
        background: #5d5d5d;
        color: white;
        padding: 5px;
        width: 70px;
        text-align: center;
        font-weight: normal;
        margin: 0px;
        height: 31px;
    }

    .table-group select {
        border: 1px solid #5d5d5d;
        height: 32px;
        margin: 0px;
        min-width: 450px;
    }

    td, th {
        padding: 2px;
    }

    #table {        
        border: 2px solid #6e6e6e;
        max-width: 800px;
        margin: 20px auto;
        padding: 4px;
        visibility:hidden;
    }
    .chart {
       margin-bottom: 0px;
    border: 2px solid #6e6e6e;
    padding: 7px;
    width: 50%;
    height: 400px;
    visibility:hidden;
    }
</style>
<div class="container">
    <div class="row">
        <div class="col-xs-12">
            @*<h2>تقارير المقارنة لمؤشر في نطاق حغرافي</h2>
            <hr />*@
            <table class="table-group">
                <tbody>
                    <tr>
                        <td><label class="control-label">الحزمة</label></td>
                        <td>@Html.DropDownList("BundleID", null, htmlAttributes: new { @class = "form-control", @id = "BundleID" })</td>
                    </tr>
                    <tr>
                        <td><label class="control-label">المؤشر</label></td>
                        <td>
                            <select id="IndicatorID" class="form-control" required>
                                <option value="">-- إختر المؤشر --</option>
                            </select>
                        </td>
                    </tr>
                </tbody>
            </table>
            <div id="indicator">
                <div class="col-xs-12">
                    <div style="width:100%;max-width:700px;margin:auto">
                        <input type="range" class="custom-range" min="0" max="0" id="yearRange">
                        <div class="full-width text-center" id="currentYear"></div>
                    </div>
                    @foreach (string type in ViewBag.items)
                    {
                        if (type.Equals("map"))
                        {
                            <div class="row">
                                <div class="col-xs-12">
                                    <div style="width:100%;max-width:700px;margin:auto">
                                        <div id="map" style="width: 100%; height: 500px;"></div>
                                    </div>
                                </div>
                            </div>
                        }
                        else if (type.Equals("table"))
                        {
                            <div class="row">
                                <div class="col-xs-12">
                                    <div id="table"></div>
                                </div>
                            </div>
                        }
                    }

                    <div class="row" style="max-width:900px; margin:10px auto;">
                        @foreach (string type in ViewBag.items)
                        {
                            if (type.Equals("barchart"))
                            {
                                <div class="col-sm-6 chart">
                                    <div style="width:100%;max-width:700px;margin:auto">
                                        <div id="barchartContainer" style="direction:ltr; height: 370px; max-width: 920px;">
                                        </div>
                                    </div>
                                </div>
                            }
                            else if (type.Equals("piechart"))
                            {
                                <div class="col-sm-6 chart">
                                    <div style="width:100%;max-width:700px;margin:auto">
                                        <div id="chartContainer" style="direction:ltr; height: 370px; max-width: 920px;">
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section  scripts{
    @Scripts.Render("~/scripts/charts")
    @Scripts.Render("~/Content/mapReport");

    <script type="text/javascript">
        var backgroundColor = '@(ViewBag.backgroundColor!=null?ViewBag.backgroundColor:"#f4fcff")';
        var startColor = '@(ViewBag.startColor!=null?ViewBag.startColor:"#C8EEFF")';
        var endColor = '@(ViewBag.endColor!=null?ViewBag.endColor:"#0071A4")';
        var regions =
            {
                g1: "الخبر",
                g2: "بقيق",
                g3: "الدمام",
                g4: "النعيرية",
                g5: "قرية العليا",
                g6: "الخفجي",
                g7: "الجبيل",
                g8: "القطيف",
                g9: "رأس تنورة",
                g10:"حفر الباطن"
        };
        var map;

        $(function () {
            $('#map').vectorMap({
                map: 'govs',
                backgroundColor: backgroundColor,
                series: {
                    regions: [{
                        values: {},
                        scale: [startColor, endColor],
                        min: 0,
                        max: 100
                    }]
                },
                onRegionTipShow: function (e, el, code) {
                    if (data[code] == undefined) {
                        el.html(el.html() + ' (لا يوجد بيانات)');
                    }
                    else {
                        el.html(el.html() + ' (' + data[code] + ')');
                    }
                },
                labels: {
                    regions: {
                        render: function (code) {
                            return regions[code];
                        }
                    }
                }
            });
        });
        var years;
        var data = {};
        function fillMap(indicatorId, year) {
            data = {};
            chartData = [];
            var min, max;
             calculatedValues.forEach(function (e, i) {
                 if (e.IndicatorID == indicatorId && e.Year == year) {
                     for (k in regions) {
                         if (regions[k] === e.Name && e.Value != null) {
                             data[k] = e.Value;
                             chartData.push({ y: e.Value, label: e.Name });
                         }
                     }
                     if (min == undefined)
                         min = e.Value;
                     if (max == undefined)
                         max = e.Value;
                      if (min > e.Value)
                         min = e.Value;
                     if (max < e.Value)
                         max = e.Value;
                 }
             });
            if (min == undefined) min = 0;
            if (max == undefined) max = 0;
            @if (((string[])ViewBag.items).Contains("map"))
            {
            <text>
            var map = $('#map').vectorMap('get', 'mapObject');
            map.series.regions[0].min=min;
            map.series.regions[0].max=max;
            map.series.regions[0].scale[0] = startColor;
            map.series.regions[0].scale[1] = endColor;
                map.series.regions[0].setValues(data);
            </text>
            }
            fillTableAndChart(chartData,$('#IndicatorID :selected').text());
        }
        function getIndicator(indicatorId) {
            var yearsValue = {};
             years= [];
            calculatedValues.forEach(function (e, i) {
                if (e.IndicatorID == indicatorId && !years.includes(e.Year)) {
                    years.push(e.Year);
                    yearsValue[e.Year] = e.Value;
                }
            });
            years.sort();
            $('#yearRange').attr('max', years.length-1);
            $('#yearRange').change();
        }
        function fillTableAndChart(chartData,title) {
            var table = "<table class='table'><thead><tr><th>المحافظة</th><th>القيمة</th></tr></thead><tbody>";
            for (var i = 0; i < chartData.length; i++) {
                table += "<tr><td>" + chartData[i].label + "</td><td>" + chartData[i].y + "</td></tr>";
            }
            table += "</tbody></table>";
            $('#table').html(table);
            @if (((string[])ViewBag.items).Contains("piechart"))
            {
              <text>
             var chart = new CanvasJS.Chart("chartContainer", {
             animationEnabled: true,
             //title: { text: title },
             data: [{
                 type: "pie",
                 startAngle: 240,
                 yValueFormatString: "##0.00",
                 indexLabel: "{label} {y}",
                 dataPoints: chartData
             }]
            });
            chart.render();
            </text>
            }
            @if (((string[])ViewBag.items).Contains("barchart"))
            {
            <text>
            var bchart = new CanvasJS.Chart("barchartContainer", {
                animationEnabled: true,
                //title: { text: title },
                axisX: { interval: 1 },
                axisY2: {
                    interlacedColor: "rgba(1,77,101,.2)",
                    gridColor: "rgba(1,77,101,.1)",
                    title: title
                },
                data: [{
                    type: "column",
                    name: "companies",
                    axisYType: "secondary",
                    color: "#014D65",
                    dataPoints: chartData
                }]
            });
            bchart.render();
            </text>
            }
        }
        var indicators = @Html.Raw(Json.Encode(ViewBag.Indicators));
        var calculatedValues = @Html.Raw(Json.Encode(ViewBag.CalculatedValues));
        $(function () {
            $('#yearRange').change(function () {
                $('#currentYear').html(years[$(this).val()]);
                fillMap($('#IndicatorID').val(),years[$(this).val()])
            });
            $('#BundleID').change(function (e) {
                var id = $(this).val();
                $('#IndicatorID option').remove();
                $('#IndicatorID').append("<option value=''>-- إختر المؤشر --</option>");
                indicators.forEach(function (e, i) {
                    if (e.BundleID == id) {
                        $('#IndicatorID').append("<option value='"+e.ID+"'>"+e.Name+"</option>");
                    }
                });
            });
            $('#BundleID').change();
             $('#IndicatorID').change(function () {
                 getIndicator($(this).val());
                 $('.chart,#table').css('visibility','visible');
            });
        });
    </script>
}