@{
    Layout = "~/Views/Shared/_Plain.cshtml";
}
@Styles.Render("~/Content/JQVMap");
<style>
    body {
        background-color: white;
        color: black;
    }
</style>
<div class="container">
    <div class="row">
        <div class="col-xs-12">
            <h2>تقارير المقارنة لمؤشر في نطاق حغرافي</h2>
            <hr />
            <div class="form-group">
                <label class="control-label col-sm-2 col-xs-12">الحزمة</label>
                <div class="col-sm-10 col-xs-12">
                    @Html.DropDownList("BundleID", null, htmlAttributes: new { @class = "form-control", @id = "BundleID" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-sm-2 col-xs-12">المؤشر</label>
                <div class="col-sm-10 col-xs-12">
                    <select id="IndicatorID" class="form-control" required>
                        <option value="">-- إختر المؤشر --</option>
                    </select>
                </div>
            </div>
            <div id="indicator">
                <div class="col-md-8 col-md-offset-2">
                    <div id="map" style="width: 500px; height: 600px;"></div>
                    <input type="range" class="custom-range" min="0" max="0" id="yearRange">
                    <div class="full-width text-center" id="currentYear"></div>
                </div>
            </div>
        </div>
    </div>
</div>

@section  scripts{
    @Scripts.Render("~/scripts/charts")
    @Scripts.Render("~/Scripts/JQVMap");

    <script type="text/javascript">
        $(function () {
                  $('#map').vectorMap({ map: 'ksa' });
        });
        var years;
        function fillMap(indicatorId, year) {
            //clear Map
             calculatedValues.forEach(function (e, i) {
                if (e.IndicatorID == indicatorId && e.Year == year) {
                }
            });
        }

        function getIndicator(indicatorId) {
             years= [];
            calculatedValues.forEach(function (e, i) {
                if (e.IndicatorID == indicatorId && !years.includes(e.Year)) {
                    years.push(e.Year);
                }
            });
            years.sort();
            $('#yearRange').attr('max', years.length-1);
            $('#yearRange').change();
        }

        var indicators = @Html.Raw(Json.Encode(ViewBag.Indicators));
        var calculatedValues = @Html.Raw(Json.Encode(ViewBag.CalculatedValues));
        $(function () {
            $('#yearRange').change(function () {
                $('#currentYear').html(years[$(this).val()]);
                fillMap($('#IndicatorID').val(),years[$(this).val()])
            });
            $('#BundleID').change(function (e) {
                var id = $(this).val();
                $('#IndicatorID option').remove();
                $('#IndicatorID').append("<option value=''>-- إختر المؤشر --</option>");
                indicators.forEach(function (e, i) {
                    if (e.BundleID == id) {
                        $('#IndicatorID').append("<option value='"+e.ID+"'>"+e.Name+"</option>");
                    }
                });
            });
            $('#BundleID').change();
             $('#IndicatorID').change(function () {
                getIndicator($(this).val());
            });
        });
    </script>
}