@model PagedList.IPagedList<Marsad.Models.Indicator>
@using PagedList.Mvc;
@using Marsad.Helpers;


@{
    ViewBag.Title = "المعادلات الحسابية";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container">
    <div class="row">
        <div class="col-xs-12">
            <h1>المعادلات الحسابية</h1>
            <hr />

            <div class="col-sm-2">
            </div>
            <div class="col-sm-8">
                <form action="@Url.Action("Index")">
                    <select class="form-control" name="bundleID">
                        <option value="">الكل</option>
                        @foreach (var id in ViewBag.Bundles.Keys)
                        {
                            <option value="@id" @(ViewBag.BundleID == id ? "selected" : "")>@ViewBag.Bundles[id]</option>
                        }
                    </select>
                    <div class="input-group">
                        <input class="form-control" name="searchString" value="@ViewBag.CurrentFilter" placeholder="بحث بالمؤشر او الحزمة" />
                        <span class="input-group-btn">
                            <input type="submit" value="بحث" class="btn btn-primary" />
                        </span>
                    </div>
                </form>
            </div>
            <table class="table table-striped jambo_table">
                <thead>
                    <tr>
                        <th>
                            <a href="@Url.Action("Index",new { sortOrder=ViewBag.IndicatorIDSortParm,currentFilter =ViewBag.CurrentFilter})">
                                <i class="@Html.GetSortingClass((string)ViewBag.CurrentSort," IndicatorID")"></i> @Html.DisplayNameFor(model => model.FirstOrDefault().Code)
                            </a>
                        </th>
                        <th>
                            <a href="@Url.Action("Index",new { sortOrder=ViewBag.IndicatorNameSortParm,currentFilter =ViewBag.CurrentFilter})">
                                <i class="@Html.GetSortingClass((string)ViewBag.CurrentSort," IndicatorName")"></i> @Html.DisplayNameFor(model => model.FirstOrDefault().Name)
                            </a>
                        </th>
                        <th>
                            <a href="@Url.Action("Index",new { sortOrder=ViewBag.BundleNameSortParm,currentFilter=ViewBag.CurrentFilter})">
                                <i class="@Html.GetSortingClass((string)ViewBag.CurrentSort,"BundleName")"></i> @Html.DisplayNameFor(model => model.FirstOrDefault().Bundle.Name)
                            </a>
                        </th>
                        <th>
                            <a href="@Url.Action("Index",new { sortOrder=ViewBag.YearSortParm,currentFilter=ViewBag.CurrentFilter})">
                                <i class="@Html.GetSortingClass((string)ViewBag.CurrentSort,"Year")"></i> السنة
                            </a>
                        </th>
                        <th width="250"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Code)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Bundle.Name)
                            </td>
                            <td>
                                @string.Join(" - ", item.Equations.SelectMany(x => x.EquationYears).Select(x => x.Year.ToString()).ToArray())
                            </td>
                            <td>
                                @if (item.Equations.Count == 1)
                                {
                                    @Html.ActionLink("تعديل", "Edit", new { id = item.Equations[0].ID }, new { @class = "btn btn-primary" })
                                    @Html.ActionLink("بيانات", "Details", new { id = item.Equations[0].ID }, new { @class = "btn btn-default" })
                                    @Html.ActionLink("حذف", "Delete", new { id = item.Equations[0].ID }, new { @class = "btn btn-danger" })
                                }
                                else
                                {
                                    {
                                        //string[] ids = ;
                                    }
                                    <button type="button" class="btn btn-primary popup" data-equations="@string.Join(",", item.Equations.Select(x=>x.ID.ToString()).ToArray())" data-years="@string.Join(",", item.Equations.Select(x => string.Join(" - ", x.EquationYears.Select(y=>y.Year.ToString()).ToArray())).Select(x=>x).ToArray())" data-action="Edit">تعديل</button>
                                    <button type="button" class="btn btn-default popup" data-equations="@string.Join(",", item.Equations.Select(x=>x.ID.ToString()).ToArray())" data-years="@string.Join(",", item.Equations.Select(x => string.Join(" - ", x.EquationYears.Select(y=>y.Year.ToString()).ToArray())).Select(x=>x).ToArray())" data-action="Details">بيانات</button>
                                    <button type="button" class="btn btn-danger popup" data-equations="@string.Join(",", item.Equations.Select(x=>x.ID.ToString()).ToArray())" data-years="@string.Join(",", item.Equations.Select(x => string.Join(" - ", x.EquationYears.Select(y=>y.Year.ToString()).ToArray())).Select(x=>x).ToArray())" data-action="Delete">حذف</button>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <div class="col-md-2">صفحة @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount</div>
            @if (Model.PageCount > 1)
            {
                <div class="col-md-8">
                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
                </div>
            }

        </div>
    </div>
</div>

<div class="modal" tabindex="-1" role="dialog" id="popup-modal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body" id="popup-modal-body">
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script type="text/javascript">
        $(function () {
            $('.popup').click(function () {
                var ids = $(this).data().equations.split(',');
                var years = $(this).data().years.split(',');
                var _class = $(this).attr('class');
                var url = '@Url.Action("Index")';
                url = url.replace('Index', '');
                url += '/'+$(this).data().action;
                _class=_class.replace('popup', '');
                var body = '';
                ids.forEach(function (e, i) {
                    body += '<a href="'+url+'/'+e+'" class="' + _class+ '" style="width:100%">' + years[i] + '</a><br />';
                });
                $('#popup-modal-body').html(body);
                $('#popup-modal').modal('show');
            });
        });
    </script>
}