@model UserGroup

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    List<string> Dumyclaims = new List<string>();

    Dumyclaims.Add("Can add");
    Dumyclaims.Add("Can Edit");
    Dumyclaims.Add("Can Delet");

}

<div class="container">
<div class="row">
<div class="col-xs-12">
@using (Html.BeginForm())
{
   // @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h2>تعديل UserGroup</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-sm-2 col-xs-12" })
            <div class="col-sm-10 col-xs-12">
                <input type="text" class="form-control" id="userGroupNameEdit" value="@Model.Name" placeholder="ادخل اسم المجموعة" x="@Model.ID" />
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                @foreach (var item in Dumyclaims)
                {
                    <div class="checkbox">
                        <label>
                            <input class="alignleft" type="checkbox" id=`@Dumyclaims.IndexOf(item)`
                                   name="Role"
                                   value="@item" />
                            <span class="alignleft"> @item</span>

                        </label>
                    </div>
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-sm-10 col-xs-12">
                <input id="btnSubmitUGEdit" type="submit" value="حفظ" class="btn btn-primary" disabled />
				@Html.ActionLink("الرئيسية", "Index",null ,new {@class="btn btn-default"})
            </div>
        </div>
    </div>
}

    

</div>
</div>
</div>

@section scripts{
    <script>
        $("#userGroupNameEdit").keyup(function () {
             
               if ($("#userGroupNameEdit").val() != "") {
                   $("#btnSubmitUGEdit").prop('disabled', false);
                   $("#btnSubmitUGEdit").removeClass("disabled");
            }
            else {
                   $("#btnSubmitUGEdit").prop('disabled', true);
                   $("#btnSubmitUGEdit").addClass("disabled");
            }
        });

        $("#btnSubmitUGEdit").click(function () {
            let Roles=[];
            var UG = new Object();
            let CC = [];
            UG.Id = $("#userGroupNameEdit").attr("x")
            UG.Name = $('#userGroupNameEdit').val();
            $.each($("input[name='Role']:checked"), function () {
                Roles.push($(this).val());
            });
            for (let i = 0;i<Roles.length ;i++){
                let c = {
                          "Key": i,
                           "Name": Roles[i],
                }
                CC.push(c);

            }
            UG.Claims = CC;
            console.log(UG);
            $.ajax({
                type: "POST",
                url: "/UserGroups/Edit",
                data: UG,


                success: function (response) {

                },
                error: function (response) {
                    console(response.responseText);
                }
            });




        });

    </script>
}
